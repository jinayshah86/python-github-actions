name: Python application

on: [push,pull_request]

jobs:
  build:

    env:
      PYTHON_FILES: .

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: get changed files for push
      if: ${{ github.event_name == 'push' }}
      run: |
        echo ::set-env name=PYTHON_FILES::$(find . -type f -name "*.py" | xargs git diff --name-only --diff-filter=ACMRT ${{ github.sha }}~ ${{ github.sha }} | awk '{print $1}' | paste -d' ' -s)
    - name: get changed files for pull request
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        echo ::set-env name=PYTHON_FILES::$(git diff --name-only --diff-filter=ACMRT origin/${{ github.base_ref }} origin/${{ github.head_ref }})
    - name: print PYTHON_FILES
      run: |
        echo ${{ env.PYTHON_FILES }}
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Formatting check
      if: ${{ env.PYTHON_FILES }}
      run: |
        pip install -qU autoflake==1.4 docformatter==1.3.1 black==20.8b1
        echo "Checking with autoflake"
        autoflake --check --expand-star-imports --remove-all-unused-imports --ignore-init-module-imports --remove-duplicate-keys --remove-unused-variables ${{ env.PYTHON_FILES }}
        echo "Checking with docformatter"
        docformatter --check --make-summary-multi-line --pre-summary-newline ${{ env.PYTHON_FILES }}
        echo "Checking with isort"
        isort --check-only --quiet ${{ env.PYTHON_FILES }}
        echo "Checking with black"
        black --check ${{ env.PYTHON_FILES }} -l 79
    - name: Test with pytest
      run: |
        pip install pytest==5.3.5 coverage==4.5.4
        coverage run --source . -m pytest tests --junitxml=reports/test.xml
        coverage xml -o reports/coverage.xml
    - name: codecov
      uses: codecov/codecov-action@v1
      with:
        file: reports/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
